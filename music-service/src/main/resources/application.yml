server:
  port: 8081

spring:
  application:
    name: music-service
  profiles:
    active: dev
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://configserver:8071"
  datasource:
    url: jdbc:postgresql://localhost:5432/db-dev
    driver-class-name: org.postgresql.Driver
    username: devuser
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/smarthomehub
          jwk-set-uri: http://keycloak:8080/realms/smarthomehub/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/smarthomehub
        registration:
          keycloak:
            client-name: music-service
            client-id: music-service
            authorization-grant-type: authorization_code
            client-secret: 7t65KiOCvW6rNsOU9ltyiSDAcrbfUm2o
            scope:
              - openid
              - offline_access
              - profile
              - roles
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka-server:9092
          auto-create-topics: true
          auto-add-partitions: true
        bindings:
          speakerEventSupplier-out-0:
            producer:
              sync: true
      bindings:
        speakerEventSupplier-out-0:
          destination: speaker-event-topic
      output-bindings: speakerEventSupplier-out-0

management:
  endpoint:
    health:
      circuitbreakers:
        enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include:
          health

resilience4j.circuitbreaker:
  instances:
    licenseService:
      registerHealthIndicator: true
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
    organizationService:
      registerHealthIndicator: true
      slidingWindowSize: 6
      permittedNumberOfCallsInHalfOpenState: 4
      waitDurationInOpenState: 20s
      failureRateThreshold: 60

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eurekaserver:8073/eureka/